# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  # The Node.js orb contains a set of prepackaged CircleCI configuration you can utilize
  # Orbs reduce the amount of configuration required for common tasks.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/node
  node: circleci/node@4.7
  snyk: snyk/snyk@1.1.2
  defaults: &defaults
    docker:
      - image: cimg/node:16.10

jobs:

  build:
    <<: *defaults
    steps:
      - run:
          name:  Download cc-test-reporter
          command: |
            mkdir -p tmp/
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
            chmod +x ./tmp/cc-test-reporter
      - persist_to_workspace:
          root: tmp
          paths:
            - cc-test-reporter

  scan-vulnerabilities:
    docker:
      - image: cimg/base:2021.04
    environment: 
      SNYK_TOKEN: "71e3f0c7-273f-4335-a2c1-8981a826e9b0"
    steps: 
      - snyk/scan:
          token-variable: SNYK_TOKEN 

  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  test:
    <<: *defaults
    # Then run your tests!
    # CircleCI will report the results back to your VCS provider.
    steps:
      # Checkout the code as the first step.
      - checkout
      - attach_workspace:
          at: ~/repo/tmp
      # Next, the node orb's install-packages step will install the dependencies from a package.json.
      # The orb install-packages step will also automatically cache them for faster future runs.
      - node/install-packages:
          # If you are using yarn, change the line below from "npm" to "yarn"
          pkg-manager: npm
      - run:
          name: Run tests
          command: |
            npm test
            ./tmp/cc-test-reporter format-coverage -t lcov -o tmp/codeclimate.npm.json coverage/frontend/lcov.info
  
  upload-coverage:
    <<: *defaults
    environment:
      CC_TEST_REPORTER_ID: 9c1e8373b962c023d7ac2bbb4a213871762505b97f891c904e106ca0630c745e
    steps:
      - attach_workspace:
          at: ~/repo/tmp
      - run:
          name: Upload coverage results to Code Climate
          command : |
              ./tmp/cc-test-reporter upload-coverage -i tmp/codeclimate.npm.json


workflows:
  # Below is the definition of your workflow.
  # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the build-and-test job above.
  # CircleCI will run this workflow on every commit.
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  build-test:
    jobs:
      - build
      - scan-vulnerabilities:
          requires:
            - build
      - test:
          requires:
            - scan-vulnerabilities
      - upload-coverage:
          requires:
            - test
      # For running simple node tests, you could optionally use the node/test job from the orb to replicate and replace the job above in fewer lines.
      # - node/test
